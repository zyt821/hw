# SAML SSO Testing Setup Guide

## File Structure

Create these files in your web server directory:

```
/your-web-root/
├── config.php
├── saml_utils.php
├── saml_request.php
├── saml_response.php
├── session_manager.php
├── logout_request.php
├── index.php
└── .htaccess (for Apache)
```

## Step 1: Create Individual Files

### config.php

```php
<?php
class SAMLConfig {
    // Service Provider (SP) Configuration
    const SP_ENTITY_ID = 'https://yourapp.com/metadata';
    const SP_ACS_URL = 'https://yourapp.com/saml/acs';
    const SP_SLS_URL = null; // No SLS support
    
    // Identity Provider (IdP) Configuration  
    const IDP_ENTITY_ID = 'https://idp.company.com/metadata';
    const IDP_SSO_URL = 'https://idp.company.com/sso';
    const IDP_SLS_URL = null; // No SLS support
    const IDP_X509_CERT = '-----BEGIN CERTIFICATE-----
MIICXjCCAcegAwIBAgIJAKS0yb...your_idp_certificate_here...
-----END CERTIFICATE-----';
    
    // SP Private Key and Certificate (optional - only needed if IdP requires signed requests)
    const SP_PRIVATE_KEY = null; // Set to your private key if signing is required
    const SP_X509_CERT = null;   // Set to your certificate if signing is required
}
?>
```

### saml_utils.php

```php
<?php
require_once 'config.php';

class SAMLUtils {
    // Copy the SAMLUtils class from the main code
    // ... (all the methods from the artifact)
}
?>
```

### saml_request.php

```php
<?php
require_once 'config.php';
require_once 'saml_utils.php';

class SAMLAuthRequest {
    // Copy the SAMLAuthRequest class from the main code
    // ... (all the methods from the artifact)
}
?>
```

### saml_response.php

```php
<?php
require_once 'config.php';
require_once 'saml_utils.php';

class SAMLResponseHandler {
    // Copy the SAMLResponseHandler class from the main code
    // ... (all the methods from the artifact)
}
?>
```

### session_manager.php

```php
<?php
class SessionManager {
    // Copy the SessionManager class from the main code
    // ... (all the methods from the artifact)
}
?>
```

### logout_request.php

```php
<?php
require_once 'config.php';
require_once 'saml_utils.php';

class SAMLLogoutRequest {
    // Copy the SAMLLogoutRequest class from the main code
    // ... (all the methods from the artifact)
}
?>
```

## Step 2: Create Main Application (index.php)

```php
<?php
require_once 'config.php';
require_once 'saml_utils.php';
require_once 'saml_request.php';
require_once 'saml_response.php';
require_once 'session_manager.php';
require_once 'logout_request.php';

session_start();

try {
    $requestUri = $_SERVER['REQUEST_URI'];
    $parsedUrl = parse_url($requestUri);
    $path = $parsedUrl['path'];
    
    // Handle SAML ACS (Assertion Consumer Service)
    if ($path === '/saml/acs' && $_SERVER['REQUEST_METHOD'] === 'POST') {
        $result = SAMLResponseHandler::process();
        SessionManager::login($result['attributes']);
        
        // Redirect to relay state or home
        $redirectUrl = $result['relayState'] ?: '/dashboard';
        header('Location: ' . $redirectUrl);
        exit;
    }
    
    // Handle logout (local only - no SLS)
    if ($path === '/logout') {
        SessionManager::logout();
        
        // Show logout confirmation with instructions
        echo '<h1>Logged Out</h1>';
        echo '<p>You have been logged out of this application.</p>';
        echo '<p><strong>Note:</strong> You may still be logged into other applications. ';
        echo 'To completely log out, please close your browser or log out from your company portal.</p>';
        echo '<p><a href="/">Return to Home</a></p>';
        exit;
    }
    
    // Handle login initiation
    if ($path === '/login') {
        SAMLAuthRequest::redirect('/dashboard');
    }
    
    // Protected dashboard
    if ($path === '/dashboard') {
        SessionManager::requireAuth();
        $attributes = SessionManager::getUserAttributes();
        
        echo '<h1>Welcome to Your Dashboard</h1>';
        echo '<p>Hello, ' . htmlspecialchars($attributes['NameID'] ?? 'User') . '</p>';
        echo '<h2>Your Attributes:</h2>';
        echo '<pre>' . htmlspecialchars(print_r($attributes, true)) . '</pre>';
        echo '<a href="/logout">Logout</a>';
        exit;
    }
    
    // Home page
    if (!SessionManager::isAuthenticated()) {
        echo '<h1>Welcome</h1>';
        echo '<p>Please <a href="/login">login</a> to continue.</p>';
    } else {
        echo '<h1>Welcome Back</h1>';
        echo '<p>You are already logged in. Go to <a href="/dashboard">dashboard</a>.</p>';
        echo '<p><a href="/logout">Logout</a></p>';
    }
    
} catch (Exception $e) {
    error_log('SAML Error: ' . $e->getMessage());
    echo '<h1>Authentication Error</h1>';
    echo '<p>An error occurred during authentication. Please try again.</p>';
    echo '<p>Error: ' . htmlspecialchars($e->getMessage()) . '</p>';
    echo '<a href="/login">Try Again</a>';
}
?>
```

## Step 3: URL Rewriting (Apache .htaccess)

```apache
RewriteEngine On

# Handle SAML endpoints
RewriteRule ^saml/acs$ index.php [L]
RewriteRule ^login$ index.php [L]
RewriteRule ^logout$ index.php [L]
RewriteRule ^dashboard$ index.php [L]

# Handle root
RewriteRule ^$ index.php [L]
```

## Step 4: Configuration Setup

1. **Update config.php** with your actual values:
   
   ```php
   const SP_ENTITY_ID = 'https://yourserver.com/metadata';
   const SP_ACS_URL = 'https://yourserver.com/saml/acs';
   const IDP_ENTITY_ID = 'your-actual-idp-entity-id';
   const IDP_SSO_URL = 'your-actual-idp-sso-url';
   const IDP_X509_CERT = 'your-actual-idp-certificate';
   ```

## Step 5: Testing Steps

### 1. Test Home Page

- Visit: `https://yourserver.com/`
- Should show: “Welcome” with login link

### 2. Test Login Initiation

- Click “login” or visit: `https://yourserver.com/login`
- Should redirect to IdP login page
- Login with your credentials

### 3. Test Authentication Response

- After IdP login, should redirect back to `/saml/acs`
- Should process response and redirect to dashboard

### 4. Test Dashboard

- Visit: `https://yourserver.com/dashboard`
- Should show user attributes and welcome message

### 5. Test Logout

- Click logout or visit: `https://yourserver.com/logout`
- Should clear session and show logout message

## Debugging Tips

### 1. Enable Error Logging

```php
// Add to top of index.php
ini_set('display_errors', 1);
ini_set('log_errors', 1);
error_reporting(E_ALL);
```

### 2. Debug SAML Response

```php
// In saml_response.php, add debugging
public static function process() {
    if (!isset($_POST['SAMLResponse'])) {
        throw new Exception('No SAML Response found');
    }
    
    $encodedResponse = $_POST['SAMLResponse'];
    error_log('SAML Response: ' . $encodedResponse);
    
    $xml = base64_decode($encodedResponse);
    error_log('Decoded XML: ' . $xml);
    
    // Continue with processing...
}
```

### 3. Check Server Requirements

```php
// Create check.php
<?php
echo "PHP Version: " . phpversion() . "\n";
echo "OpenSSL: " . (extension_loaded('openssl') ? 'Yes' : 'No') . "\n";
echo "DOMDocument: " . (class_exists('DOMDocument') ? 'Yes' : 'No') . "\n";
echo "Sessions: " . (function_exists('session_start') ? 'Yes' : 'No') . "\n";
?>
```

## Common Issues & Solutions

### Issue: 404 on /saml/acs

**Solution**: Check URL rewriting or use direct paths in config

### Issue: “No SAML Response found”

**Solution**: Check IdP ACS URL configuration matches your SP_ACS_URL

### Issue: Certificate validation fails

**Solution**: Verify IDP_X509_CERT is correct and properly formatted

### Issue: Session not persisting

**Solution**: Check session configuration and cookie settings

## Production Considerations

1. **HTTPS Only**: Ensure all URLs use HTTPS
1. **Session Security**: Configure secure session settings
1. **Error Handling**: Don’t expose sensitive error details
1. **Logging**: Log security events appropriately
1. **Validation**: Add comprehensive input validation
