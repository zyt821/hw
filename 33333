<?php
// quick_fix_async.php - 简化版异步处理脚本

// 获取任务ID
$task_id = $argv[1] ?? '';
if (empty($task_id)) {
    die("缺少任务ID");
}

// 包含你的数据库函数
require_once 'your_database_functions.php'; // 替换为实际文件名

function simple_update_status($task_id, $status, $progress, $message) {
    try {
        $conn = connectToDatabase();
        $stmt = $conn->prepare("UPDATE task_status SET status = ?, progress = ?, message = ?, updated_at = NOW() WHERE task_id = ?");
        $stmt->bind_param("siss", $status, $progress, $message, $task_id);
        $result = $stmt->execute();
        $stmt->close();
        $conn->close();
        return $result;
    } catch (Exception $e) {
        error_log("更新状态失败: " . $e->getMessage());
        return false;
    }
}

function simple_is_cancelled($task_id) {
    try {
        $conn = connectToDatabase();
        $stmt = $conn->prepare("SELECT status FROM task_status WHERE task_id = ?");
        $stmt->bind_param("s", $task_id);
        $stmt->execute();
        $stmt->bind_result($status);
        $stmt->fetch();
        $stmt->close();
        $conn->close();
        return $status === 'cancelled';
    } catch (Exception $e) {
        error_log("检查取消状态失败: " . $e->getMessage());
        return false;
    }
}

try {
    // 获取会话ID
    $conn = connectToDatabase();
    $stmt = $conn->prepare("SELECT session_id FROM task_status WHERE task_id = ?");
    $stmt->bind_param("s", $task_id);
    $stmt->execute();
    $stmt->bind_result($session_id);
    $stmt->fetch();
    $stmt->close();
    $conn->close();
    
    if (!$session_id) {
        die("找不到会话ID");
    }
    
    simple_update_status($task_id, 'processing', 10, '开始处理...');
    
    if (simple_is_cancelled($task_id)) {
        simple_update_status($task_id, 'cancelled', 0, '已取消');
        exit(0);
    }
    
    simple_update_status($task_id, 'processing', 30, '创建比较工具...');
    
    // 直接使用你现有的处理逻辑，不使用新类
    $comparator = new ExcelComparisonTool();
    $comparator->setSessionId($session_id);
    
    simple_update_status($task_id, 'processing', 50, '加载数据...');
    
    if (simple_is_cancelled($task_id)) {
        simple_update_status($task_id, 'cancelled', 0, '已取消');
        exit(0);
    }
    
    // 加载数据
    $comparator->importDceFile();
    $comparator->importArgosFile();
    $comparator->importSnFile();
    
    simple_update_status($task_id, 'processing', 70, '清理数据...');
    
    if (simple_is_cancelled($task_id)) {
        simple_update_status($task_id, 'cancelled', 0, '已取消');
        exit(0);
    }
    
    $comparator->cleanAllData();
    
    simple_update_status($task_id, 'processing', 85, '执行比较...');
    
    if (simple_is_cancelled($task_id)) {
        simple_update_status($task_id, 'cancelled', 0, '已取消');
        exit(0);
    }
    
    // 执行比较
    $results = $comparator->compareData();
    
    simple_update_status($task_id, 'processing', 95, '保存结果...');
    
    // 保存结果
    saveResultsToDatabase($results);
    $final_session_id = storeComparisonResults($results);
    
    // 更新最终会话ID
    $conn = connectToDatabase();
    $stmt = $conn->prepare("UPDATE task_status SET status = 'completed', progress = 100, message = '处理完成！', final_session_id = ? WHERE task_id = ?");
    $stmt->bind_param("ss", $final_session_id, $task_id);
    $stmt->execute();
    $stmt->close();
    $conn->close();
    
} catch (Exception $e) {
    simple_update_status($task_id, 'error', 0, '处理出错: ' . $e->getMessage());
    error_log("异步处理错误: " . $e->getMessage());
}
?>
