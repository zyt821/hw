<!DOCTYPE html>

<html lang="zh">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>自定义离开确认</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

```
    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        padding: 20px;
    }

    .container {
        max-width: 1200px;
        margin: 0 auto;
        background: rgba(255, 255, 255, 0.95);
        border-radius: 20px;
        padding: 30px;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
    }

    h1 {
        color: #333;
        margin-bottom: 30px;
        text-align: center;
    }

    .method-section {
        margin-bottom: 40px;
        padding: 25px;
        border: 2px solid #e0e0e0;
        border-radius: 15px;
        background: #f9f9f9;
    }

    .method-title {
        color: #4a5568;
        margin-bottom: 15px;
        font-size: 1.2em;
        font-weight: bold;
    }

    .demo-area {
        background: white;
        padding: 20px;
        border-radius: 10px;
        margin: 15px 0;
    }

    .btn {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border: none;
        padding: 12px 24px;
        border-radius: 25px;
        cursor: pointer;
        font-size: 16px;
        margin: 10px;
        transition: all 0.3s ease;
        box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
    }

    .btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(102, 126, 234, 0.6);
    }

    .btn-danger {
        background: linear-gradient(135deg, #ff6b6b 0%, #ee5a52 100%);
        box-shadow: 0 4px 15px rgba(255, 107, 107, 0.4);
    }

    .btn-danger:hover {
        box-shadow: 0 6px 20px rgba(255, 107, 107, 0.6);
    }

    /* 自定义模态框样式 */
    .custom-modal {
        display: none;
        position: fixed;
        z-index: 10000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.6);
        backdrop-filter: blur(5px);
        animation: fadeIn 0.3s ease;
    }

    .modal-content {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: white;
        border-radius: 20px;
        padding: 40px;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
        max-width: 500px;
        width: 90%;
        animation: slideIn 0.3s ease;
    }

    .modal-header {
        display: flex;
        align-items: center;
        margin-bottom: 20px;
    }

    .modal-icon {
        font-size: 2em;
        margin-right: 15px;
    }

    .modal-title {
        font-size: 1.5em;
        color: #333;
        margin: 0;
    }

    .modal-body {
        color: #666;
        line-height: 1.6;
        margin-bottom: 30px;
        font-size: 16px;
    }

    .modal-actions {
        display: flex;
        justify-content: flex-end;
        gap: 15px;
    }

    .modal-btn {
        padding: 12px 30px;
        border: none;
        border-radius: 25px;
        cursor: pointer;
        font-size: 16px;
        font-weight: 500;
        transition: all 0.3s ease;
    }

    .modal-btn-primary {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
    }

    .modal-btn-secondary {
        background: #e2e8f0;
        color: #4a5568;
    }

    .modal-btn:hover {
        transform: translateY(-1px);
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    }

    /* 页面覆盖层 */
    .page-overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(255, 255, 255, 0.9);
        z-index: 9999;
        justify-content: center;
        align-items: center;
        backdrop-filter: blur(10px);
    }

    .overlay-content {
        text-align: center;
        background: white;
        padding: 40px;
        border-radius: 20px;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1);
        max-width: 600px;
        margin: 20px;
    }

    .test-form {
        background: #f7fafc;
        padding: 20px;
        border-radius: 10px;
        margin: 20px 0;
    }

    .form-group {
        margin-bottom: 15px;
        text-align: left;
    }

    .form-group label {
        display: block;
        margin-bottom: 5px;
        color: #333;
        font-weight: 500;
    }

    .form-group input,
    .form-group textarea {
        width: 100%;
        padding: 12px;
        border: 2px solid #e2e8f0;
        border-radius: 8px;
        font-size: 14px;
        transition: border-color 0.3s ease;
    }

    .form-group input:focus,
    .form-group textarea:focus {
        outline: none;
        border-color: #667eea;
    }

    .test-links {
        margin: 20px 0;
    }

    .test-link {
        display: inline-block;
        margin: 5px 10px;
        padding: 8px 16px;
        color: #667eea;
        text-decoration: none;
        border: 2px solid #667eea;
        border-radius: 20px;
        transition: all 0.3s ease;
    }

    .test-link:hover {
        background: #667eea;
        color: white;
    }

    @keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
    }

    @keyframes slideIn {
        from { 
            opacity: 0; 
            transform: translate(-50%, -60%); 
        }
        to { 
            opacity: 1; 
            transform: translate(-50%, -50%); 
        }
    }

    .status-indicator {
        padding: 15px;
        border-radius: 10px;
        margin: 20px 0;
        text-align: center;
        font-weight: bold;
    }

    .status-enabled {
        background: #d4edda;
        color: #155724;
        border: 2px solid #c3e6cb;
    }

    .status-disabled {
        background: #f8d7da;
        color: #721c24;
        border: 2px solid #f5c6cb;
    }
</style>
```

</head>
<body>
    <div class="container">
        <h1>🎯 自定义离开确认方案</h1>

```
    <!-- 方案一：拦截页面跳转 -->
    <div class="method-section">
        <h3 class="method-title">方案一：拦截页面跳转和表单提交</h3>
        <p>通过拦截链接点击、表单提交等操作，显示自定义确认框</p>
        
        <div class="demo-area">
            <div id="status1" class="status-indicator status-disabled">
                ❌ 跳转拦截已禁用
            </div>
            
            <button id="toggle1" class="btn">启用跳转拦截</button>
            
            <div class="test-links">
                <h4>测试链接：</h4>
                <a href="https://www.baidu.com" class="test-link">百度</a>
                <a href="https://www.google.com" class="test-link">Google</a>
                <a href="https://github.com" class="test-link">GitHub</a>
            </div>
            
            <div class="test-form">
                <h4>测试表单：</h4>
                <form action="https://httpbin.org/post" method="post">
                    <div class="form-group">
                        <label>姓名：</label>
                        <input type="text" name="name" placeholder="输入您的姓名">
                    </div>
                    <div class="form-group">
                        <label>邮箱：</label>
                        <input type="email" name="email" placeholder="输入您的邮箱">
                    </div>
                    <button type="submit" class="btn">提交表单</button>
                </form>
            </div>
        </div>
    </div>

    <!-- 方案二：页面锁定 -->
    <div class="method-section">
        <h3 class="method-title">方案二：页面锁定模式</h3>
        <p>当有重要操作进行时，锁定整个页面并显示提示信息</p>
        
        <div class="demo-area">
            <button id="lockPage" class="btn">模拟重要操作（锁定页面）</button>
            <button id="simulateWork" class="btn">模拟长时间工作</button>
        </div>
    </div>

    <!-- 方案三：智能提醒 -->
    <div class="method-section">
        <h3 class="method-title">方案三：智能表单保护</h3>
        <p>检测表单变化，智能提醒用户保存数据</p>
        
        <div class="demo-area">
            <div id="status3" class="status-indicator status-disabled">
                💾 表单保护：未启用
            </div>
            
            <div class="test-form">
                <h4>编辑表单：</h4>
                <div class="form-group">
                    <label>标题：</label>
                    <input type="text" id="title" placeholder="输入文章标题">
                </div>
                <div class="form-group">
                    <label>内容：</label>
                    <textarea id="content" rows="4" placeholder="输入文章内容..."></textarea>
                </div>
                <button id="saveForm" class="btn">保存</button>
                <button class="btn btn-danger" onclick="location.reload()">刷新页面（测试）</button>
            </div>
        </div>
    </div>
</div>

<!-- 自定义模态框 -->
<div id="customModal" class="custom-modal">
    <div class="modal-content">
        <div class="modal-header">
            <div class="modal-icon">⚠️</div>
            <h3 class="modal-title" id="modalTitle">确认离开</h3>
        </div>
        <div class="modal-body" id="modalBody">
            您确定要离开当前页面吗？您的更改可能不会被保存。
        </div>
        <div class="modal-actions">
            <button id="modalCancel" class="modal-btn modal-btn-secondary">取消</button>
            <button id="modalConfirm" class="modal-btn modal-btn-primary">确认离开</button>
        </div>
    </div>
</div>

<!-- 页面锁定覆盖层 -->
<div id="pageOverlay" class="page-overlay">
    <div class="overlay-content">
        <div style="font-size: 3em; margin-bottom: 20px;">🔒</div>
        <h2 id="overlayTitle">页面已锁定</h2>
        <p id="overlayMessage">正在执行重要操作，请稍候...</p>
        <div style="margin-top: 30px;">
            <div style="width: 300px; height: 4px; background: #e2e8f0; border-radius: 2px; margin: 20px auto; overflow: hidden;">
                <div id="progressBar" style="width: 0%; height: 100%; background: linear-gradient(90deg, #667eea, #764ba2); transition: width 0.3s ease;"></div>
            </div>
            <button id="unlockPage" class="btn" style="display: none;">解锁页面</button>
        </div>
    </div>
</div>

<script>
    // 全局变量
    let isInterceptionEnabled = false;
    let hasUnsavedChanges = false;
    let pendingNavigation = null;
    let isPageLocked = false;

    // DOM元素
    const customModal = document.getElementById('customModal');
    const modalTitle = document.getElementById('modalTitle');
    const modalBody = document.getElementById('modalBody');
    const modalCancel = document.getElementById('modalCancel');
    const modalConfirm = document.getElementById('modalConfirm');
    const pageOverlay = document.getElementById('pageOverlay');

    // === 方案一：拦截页面跳转 ===
    const toggle1 = document.getElementById('toggle1');
    const status1 = document.getElementById('status1');

    toggle1.addEventListener('click', function() {
        if (isInterceptionEnabled) {
            disableInterception();
        } else {
            enableInterception();
        }
    });

    function enableInterception() {
        isInterceptionEnabled = true;
        toggle1.textContent = '禁用跳转拦截';
        toggle1.classList.add('btn-danger');
        status1.textContent = '✅ 跳转拦截已启用';
        status1.className = 'status-indicator status-enabled';

        // 拦截所有链接点击
        document.addEventListener('click', handleLinkClick, true);
        
        // 拦截表单提交
        document.addEventListener('submit', handleFormSubmit, true);
    }

    function disableInterception() {
        isInterceptionEnabled = false;
        toggle1.textContent = '启用跳转拦截';
        toggle1.classList.remove('btn-danger');
        status1.textContent = '❌ 跳转拦截已禁用';
        status1.className = 'status-indicator status-disabled';

        document.removeEventListener('click', handleLinkClick, true);
        document.removeEventListener('submit', handleFormSubmit, true);
    }

    function handleLinkClick(e) {
        if (!isInterceptionEnabled) return;
        
        const link = e.target.closest('a');
        if (link && link.href && !link.href.startsWith('#') && !link.href.startsWith('javascript:')) {
            e.preventDefault();
            e.stopPropagation();
            
            showCustomConfirm(
                '确认跳转',
                `您即将跳转到：${link.href}\n\n确定要离开当前页面吗？`,
                function() {
                    window.open(link.href, link.target || '_self');
                }
            );
        }
    }

    function handleFormSubmit(e) {
        if (!isInterceptionEnabled) return;
        
        e.preventDefault();
        e.stopPropagation();
        
        const form = e.target;
        showCustomConfirm(
            '确认提交表单',
            '您即将提交表单数据，这将离开当前页面。\n\n确定要继续吗？',
            function() {
                // 临时禁用拦截来提交表单
                const wasEnabled = isInterceptionEnabled;
                isInterceptionEnabled = false;
                form.submit();
                isInterceptionEnabled = wasEnabled;
            }
        );
    }

    // === 方案二：页面锁定 ===
    document.getElementById('lockPage').addEventListener('click', function() {
        lockPage('正在处理重要数据', '请不要关闭页面或刷新浏览器...', 3000);
    });

    document.getElementById('simulateWork').addEventListener('click', function() {
        simulateWorkProgress();
    });

    function lockPage(title, message, duration = null) {
        if (isPageLocked) return;
        
        isPageLocked = true;
        document.getElementById('overlayTitle').textContent = title;
        document.getElementById('overlayMessage').textContent = message;
        document.getElementById('unlockPage').style.display = 'none';
        document.getElementById('progressBar').style.width = '0%';
        
        pageOverlay.style.display = 'flex';
        document.body.style.overflow = 'hidden';

        // 启用beforeunload保护
        window.addEventListener('beforeunload', beforeUnloadHandler);

        if (duration) {
            setTimeout(() => {
                unlockPage();
            }, duration);
        } else {
            document.getElementById('unlockPage').style.display = 'inline-block';
        }
    }

    function unlockPage() {
        isPageLocked = false;
        pageOverlay.style.display = 'none';
        document.body.style.overflow = 'auto';
        
        // 移除beforeunload保护
        window.removeEventListener('beforeunload', beforeUnloadHandler);
    }

    function simulateWorkProgress() {
        lockPage('正在处理...', '进度：0%');
        
        let progress = 0;
        const interval = setInterval(() => {
            progress += Math.random() * 15;
            if (progress >= 100) {
                progress = 100;
                clearInterval(interval);
                setTimeout(() => {
                    unlockPage();
                    showNotification('✅ 处理完成！', 'success');
                }, 500);
            }
            
            document.getElementById('progressBar').style.width = progress + '%';
            document.getElementById('overlayMessage').textContent = `进度：${Math.floor(progress)}%`;
        }, 200);
    }

    document.getElementById('unlockPage').addEventListener('click', unlockPage);

    // === 方案三：智能表单保护 ===
    const titleInput = document.getElementById('title');
    const contentInput = document.getElementById('content');
    const status3 = document.getElementById('status3');
    const saveButton = document.getElementById('saveForm');

    [titleInput, contentInput].forEach(input => {
        input.addEventListener('input', function() {
            if (!hasUnsavedChanges && this.value.length > 0) {
                hasUnsavedChanges = true;
                updateFormStatus();
                enableBeforeUnload();
            }
        });
    });

    saveButton.addEventListener('click', function() {
        // 模拟保存
        showNotification('✅ 数据已保存！', 'success');
        hasUnsavedChanges = false;
        updateFormStatus();
        disableBeforeUnload();
    });

    function updateFormStatus() {
        if (hasUnsavedChanges) {
            status3.textContent = '⚠️ 表单保护：有未保存的更改';
            status3.className = 'status-indicator status-enabled';
        } else {
            status3.textContent = '💾 表单保护：已保存';
            status3.className = 'status-indicator status-disabled';
        }
    }

    // === 通用功能 ===
    function showCustomConfirm(title, message, onConfirm, onCancel) {
        modalTitle.textContent = title;
        modalBody.textContent = message;
        customModal.style.display = 'block';
        
        const handleConfirm = () => {
            customModal.style.display = 'none';
            if (onConfirm) onConfirm();
            cleanup();
        };
        
        const handleCancel = () => {
            customModal.style.display = 'none';
            if (onCancel) onCancel();
            cleanup();
        };
        
        const cleanup = () => {
            modalConfirm.removeEventListener('click', handleConfirm);
            modalCancel.removeEventListener('click', handleCancel);
            document.removeEventListener('keydown', handleEscape);
        };
        
        const handleEscape = (e) => {
            if (e.key === 'Escape') {
                handleCancel();
            }
        };
        
        modalConfirm.addEventListener('click', handleConfirm);
        modalCancel.addEventListener('click', handleCancel);
        document.addEventListener('keydown', handleEscape);
    }

    // beforeunload 处理
    function beforeUnloadHandler(e) {
        if (hasUnsavedChanges || isPageLocked) {
            e.preventDefault();
            e.returnValue = '';
            return '';
        }
    }

    function enableBeforeUnload() {
        window.addEventListener('beforeunload', beforeUnloadHandler);
    }

    function disableBeforeUnload() {
        window.removeEventListener('beforeunload', beforeUnloadHandler);
    }

    // 通知功能
    function showNotification(message, type = 'info') {
        const notification = document.createElement('div');
        notification.textContent = message;
        notification.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 15px 20px;
            border-radius: 10px;
            color: white;
            font-weight: bold;
            z-index: 10001;
            animation: slideInRight 0.3s ease, slideOutRight 0.3s ease 2.7s;
            ${type === 'success' ? 'background: linear-gradient(135deg, #48bb78, #38a169);' : 
              type === 'error' ? 'background: linear-gradient(135deg, #f56565, #e53e3e);' : 
              'background: linear-gradient(135deg, #4299e1, #3182ce);'}
        `;
        
        document.body.appendChild(notification);
        
        setTimeout(() => {
            if (notification.parentNode) {
                notification.parentNode.removeChild(notification);
            }
        }, 3000);
    }

    // 添加CSS动画
    const style = document.createElement('style');
    style.textContent = `
        @keyframes slideInRight {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }
        @keyframes slideOutRight {
            from {
                transform: translateX(0);
                opacity: 1;
            }
            to {
                transform: translateX(100%);
                opacity: 0;
            }
        }
    `;
    document.head.appendChild(style);

    // 点击模态框外部关闭
    customModal.addEventListener('click', function(e) {
        if (e.target === customModal) {
            customModal.style.display = 'none';
        }
    });
</script>
```

</body>
</html>
